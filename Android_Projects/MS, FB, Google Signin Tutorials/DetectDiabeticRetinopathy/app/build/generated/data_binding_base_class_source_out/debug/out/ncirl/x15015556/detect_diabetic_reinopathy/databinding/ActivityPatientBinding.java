// Generated by view binder compiler. Do not edit!
package ncirl.x15015556.detect_diabetic_reinopathy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ncirl.x15015556.detect_diabetic_reinopathy.R;

public final class ActivityPatientBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnClear;

  @NonNull
  public final Button btnContinue;

  @NonNull
  public final Button btnRevokeAccess;

  @NonNull
  public final Button btnSignOut;

  @NonNull
  public final EditText etPatientID;

  @NonNull
  public final ImageView ivError;

  @NonNull
  public final TextView tvError;

  @NonNull
  public final TextView tvGoogleID;

  @NonNull
  public final TextView tvGoogleIDHeading;

  @NonNull
  public final TextView tvGoogleName;

  @NonNull
  public final TextView tvGoogleNameHeader;

  @NonNull
  public final TextView tvNote;

  @NonNull
  public final TextView tvPatientIDHeading;

  private ActivityPatientBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnClear,
      @NonNull Button btnContinue, @NonNull Button btnRevokeAccess, @NonNull Button btnSignOut,
      @NonNull EditText etPatientID, @NonNull ImageView ivError, @NonNull TextView tvError,
      @NonNull TextView tvGoogleID, @NonNull TextView tvGoogleIDHeading,
      @NonNull TextView tvGoogleName, @NonNull TextView tvGoogleNameHeader,
      @NonNull TextView tvNote, @NonNull TextView tvPatientIDHeading) {
    this.rootView = rootView;
    this.btnClear = btnClear;
    this.btnContinue = btnContinue;
    this.btnRevokeAccess = btnRevokeAccess;
    this.btnSignOut = btnSignOut;
    this.etPatientID = etPatientID;
    this.ivError = ivError;
    this.tvError = tvError;
    this.tvGoogleID = tvGoogleID;
    this.tvGoogleIDHeading = tvGoogleIDHeading;
    this.tvGoogleName = tvGoogleName;
    this.tvGoogleNameHeader = tvGoogleNameHeader;
    this.tvNote = tvNote;
    this.tvPatientIDHeading = tvPatientIDHeading;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClear;
      Button btnClear = rootView.findViewById(id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btnContinue;
      Button btnContinue = rootView.findViewById(id);
      if (btnContinue == null) {
        break missingId;
      }

      id = R.id.btnRevokeAccess;
      Button btnRevokeAccess = rootView.findViewById(id);
      if (btnRevokeAccess == null) {
        break missingId;
      }

      id = R.id.btnSignOut;
      Button btnSignOut = rootView.findViewById(id);
      if (btnSignOut == null) {
        break missingId;
      }

      id = R.id.etPatientID;
      EditText etPatientID = rootView.findViewById(id);
      if (etPatientID == null) {
        break missingId;
      }

      id = R.id.ivError;
      ImageView ivError = rootView.findViewById(id);
      if (ivError == null) {
        break missingId;
      }

      id = R.id.tvError;
      TextView tvError = rootView.findViewById(id);
      if (tvError == null) {
        break missingId;
      }

      id = R.id.tvGoogleID;
      TextView tvGoogleID = rootView.findViewById(id);
      if (tvGoogleID == null) {
        break missingId;
      }

      id = R.id.tvGoogleIDHeading;
      TextView tvGoogleIDHeading = rootView.findViewById(id);
      if (tvGoogleIDHeading == null) {
        break missingId;
      }

      id = R.id.tvGoogleName;
      TextView tvGoogleName = rootView.findViewById(id);
      if (tvGoogleName == null) {
        break missingId;
      }

      id = R.id.tvGoogleNameHeader;
      TextView tvGoogleNameHeader = rootView.findViewById(id);
      if (tvGoogleNameHeader == null) {
        break missingId;
      }

      id = R.id.tvNote;
      TextView tvNote = rootView.findViewById(id);
      if (tvNote == null) {
        break missingId;
      }

      id = R.id.tvPatientIDHeading;
      TextView tvPatientIDHeading = rootView.findViewById(id);
      if (tvPatientIDHeading == null) {
        break missingId;
      }

      return new ActivityPatientBinding((ConstraintLayout) rootView, btnClear, btnContinue,
          btnRevokeAccess, btnSignOut, etPatientID, ivError, tvError, tvGoogleID, tvGoogleIDHeading,
          tvGoogleName, tvGoogleNameHeader, tvNote, tvPatientIDHeading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
